package scanner

import (
	"github.com/mtvarkovsky/golox/pkg/tokens"
	"github.com/stretchr/testify/assert"
	"testing"
)

var testLoxCode = `
print "Hello, world!";

var imAVariable = "here is my value";
var iAmNil;
iAmNil == nil // true

var breakfast = "bagels";
print breakfast; // "bagels".
breakfast = "beignets";
print breakfast; // "beignets".

var addition = 1 + 1; // 2
var subtraction = 1 - 1; // 0
var multiplication = 1.0 * 1.0; // 1.0
var division = 2.0 / 1.0; // 2.0

var negation = -1; // -1

100 < 101; // true
101 <= 100; // false
100 > 101; // false
101 >= 101; // true

1 == 2;         // false
"cat" != "dog"; // true

123 != "123"; // true

!true;  // false
!false; // true

true and false; // false
true and true;  // true

false or false; // false
true or false;  // true

var average = (1 + 1) / 2; // 1

if (true) {
    print "yes";
  } else {
    print "no";
}

var a = 1;
while (a < 10) {
  print a;
  a = a + 1;
}

for (var a = 1; a < 10; a = a + 1) {
  print a;
}

fun printSum(a, b) {
  print a + b;
}

fun returnSum(a, b) {
  return a + b;
}

fun addPair(a, b) {
  return a + b;
}

fun identity(a) {
  return a;
}

print identity(addPair)(1, 2); // Prints "3".

fun outerFunction() {
  fun localFunction() {
    print "I'm local!";
  }

  localFunction();
}

class Breakfast {
  cook() {
    print "Eggs a-fryin'!";
  }

  serve(who) {
    print "Enjoy your breakfast, " + who + ".";
  }
}

// Store it in variables.
var someVariable = Breakfast;

// Pass it to functions.
someFunction(Breakfast);

var breakfast = Breakfast();
print breakfast; // "Breakfast instance".

class Breakfast {
  init(meat, bread) {
    this.meat = meat;
    this.bread = bread;
  }

  serve(who) {
    print "Enjoy your " + this.meat + " and " +
        this.bread + ", " + who + ".";
  }

  // ...
}

class Brunch < Breakfast {
  init(meat, bread, drink) {
    super.init(meat, bread);
    this.drink = drink;
  }

  drink() {
    print "How about a Bloody Mary?";
  }
}
`

func TestScanner_Success(t *testing.T) {
	scnr := NewScanner(testLoxCode)

	isAtEnd := scnr.IsAtEnd()
	assert.False(t, isAtEnd)

	tkns, errs := scnr.ScanTokens()

	isAtEnd = scnr.IsAtEnd()
	assert.True(t, isAtEnd)

	assert.Nil(t, errs)

	expectedTokens := []tokens.Token{
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			2,
			1,
		),
		tokens.NewToken(
			tokens.String,
			`"Hello, world!"`,
			"Hello, world!",
			2,
			7,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			2,
			22,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			4,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`imAVariable`,
			nil,
			4,
			5,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			4,
			17,
		),
		tokens.NewToken(
			tokens.String,
			`"here is my value"`,
			"here is my value",
			4,
			19,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			4,
			37,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			5,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`iAmNil`,
			nil,
			5,
			5,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			5,
			11,
		),
		tokens.NewToken(
			tokens.Identifier,
			`iAmNil`,
			nil,
			6,
			1,
		),
		tokens.NewToken(
			tokens.EqualEqual,
			`==`,
			nil,
			6,
			8,
		),
		tokens.NewToken(
			tokens.Nil,
			`nil`,
			nil,
			6,
			11,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			8,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`breakfast`,
			nil,
			8,
			5,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			8,
			15,
		),
		tokens.NewToken(
			tokens.String,
			`"bagels"`,
			"bagels",
			8,
			17,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			8,
			25,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			9,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`breakfast`,
			nil,
			9,
			7,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			9,
			16,
		),
		tokens.NewToken(
			tokens.Identifier,
			`breakfast`,
			nil,
			10,
			1,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			10,
			11,
		),
		tokens.NewToken(
			tokens.String,
			`"beignets"`,
			"beignets",
			10,
			13,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			10,
			23,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			11,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`breakfast`,
			nil,
			11,
			7,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			11,
			16,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			13,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`addition`,
			nil,
			13,
			5,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			13,
			14,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			13,
			16,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			13,
			18,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			13,
			20,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			13,
			21,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			14,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`subtraction`,
			nil,
			14,
			5,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			14,
			17,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			14,
			19,
		),
		tokens.NewToken(
			tokens.Minus,
			`-`,
			nil,
			14,
			21,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			14,
			23,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			14,
			24,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			15,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`multiplication`,
			nil,
			15,
			5,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			15,
			20,
		),
		tokens.NewToken(
			tokens.Number,
			`1.0`,
			1.0,
			15,
			22,
		),
		tokens.NewToken(
			tokens.Star,
			`*`,
			nil,
			15,
			26,
		),
		tokens.NewToken(
			tokens.Number,
			`1.0`,
			1.0,
			15,
			28,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			15,
			31,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			16,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`division`,
			nil,
			16,
			5,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			16,
			14,
		),
		tokens.NewToken(
			tokens.Number,
			`2.0`,
			2.0,
			16,
			16,
		),
		tokens.NewToken(
			tokens.Slash,
			`/`,
			nil,
			16,
			20,
		),
		tokens.NewToken(
			tokens.Number,
			`1.0`,
			1.0,
			16,
			22,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			16,
			25,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			18,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`negation`,
			nil,
			18,
			5,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			18,
			14,
		),
		tokens.NewToken(
			tokens.Minus,
			`-`,
			nil,
			18,
			16,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			18,
			17,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			18,
			18,
		),
		tokens.NewToken(
			tokens.Number,
			`100`,
			100.0,
			20,
			1,
		),
		tokens.NewToken(
			tokens.Less,
			`<`,
			nil,
			20,
			5,
		),
		tokens.NewToken(
			tokens.Number,
			`101`,
			101.0,
			20,
			7,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			20,
			10,
		),
		tokens.NewToken(
			tokens.Number,
			`101`,
			101.0,
			21,
			1,
		),
		tokens.NewToken(
			tokens.LessEqual,
			`<=`,
			nil,
			21,
			5,
		),
		tokens.NewToken(
			tokens.Number,
			`100`,
			100.0,
			21,
			8,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			21,
			11,
		),
		tokens.NewToken(
			tokens.Number,
			`100`,
			100.0,
			22,
			1,
		),
		tokens.NewToken(
			tokens.Greater,
			`>`,
			nil,
			22,
			5,
		),
		tokens.NewToken(
			tokens.Number,
			`101`,
			101.0,
			22,
			7,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			22,
			10,
		),
		tokens.NewToken(
			tokens.Number,
			`101`,
			101.0,
			23,
			1,
		),
		tokens.NewToken(
			tokens.GreaterEqual,
			`>=`,
			nil,
			23,
			5,
		),
		tokens.NewToken(
			tokens.Number,
			`101`,
			101.0,
			23,
			8,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			23,
			11,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			25,
			1,
		),
		tokens.NewToken(
			tokens.EqualEqual,
			`==`,
			nil,
			25,
			3,
		),
		tokens.NewToken(
			tokens.Number,
			`2`,
			2.0,
			25,
			6,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			25,
			7,
		),
		tokens.NewToken(
			tokens.String,
			`"cat"`,
			"cat",
			26,
			1,
		),
		tokens.NewToken(
			tokens.BangEqual,
			`!=`,
			nil,
			26,
			7,
		),
		tokens.NewToken(
			tokens.String,
			`"dog"`,
			"dog",
			26,
			10,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			26,
			15,
		),
		tokens.NewToken(
			tokens.Number,
			`123`,
			123.0,
			28,
			1,
		),
		tokens.NewToken(
			tokens.BangEqual,
			`!=`,
			nil,
			28,
			5,
		),
		tokens.NewToken(
			tokens.String,
			`"123"`,
			"123",
			28,
			8,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			28,
			13,
		),
		tokens.NewToken(
			tokens.Bang,
			`!`,
			nil,
			30,
			1,
		),
		tokens.NewToken(
			tokens.True,
			`true`,
			nil,
			30,
			2,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			30,
			6,
		),
		tokens.NewToken(
			tokens.Bang,
			`!`,
			nil,
			31,
			1,
		),
		tokens.NewToken(
			tokens.False,
			`false`,
			nil,
			31,
			2,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			31,
			7,
		),
		tokens.NewToken(
			tokens.True,
			`true`,
			nil,
			33,
			1,
		),
		tokens.NewToken(
			tokens.And,
			`and`,
			nil,
			33,
			6,
		),
		tokens.NewToken(
			tokens.False,
			`false`,
			nil,
			33,
			10,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			33,
			15,
		),
		tokens.NewToken(
			tokens.True,
			`true`,
			nil,
			34,
			1,
		),
		tokens.NewToken(
			tokens.And,
			`and`,
			nil,
			34,
			6,
		),
		tokens.NewToken(
			tokens.True,
			`true`,
			nil,
			34,
			10,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			34,
			14,
		),
		tokens.NewToken(
			tokens.False,
			`false`,
			nil,
			36,
			1,
		),
		tokens.NewToken(
			tokens.Or,
			`or`,
			nil,
			36,
			7,
		),
		tokens.NewToken(
			tokens.False,
			`false`,
			nil,
			36,
			10,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			36,
			15,
		),
		tokens.NewToken(
			tokens.True,
			`true`,
			nil,
			37,
			1,
		),
		tokens.NewToken(
			tokens.Or,
			`or`,
			nil,
			37,
			6,
		),
		tokens.NewToken(
			tokens.False,
			`false`,
			nil,
			37,
			9,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			37,
			14,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			39,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`average`,
			nil,
			39,
			5,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			39,
			13,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			39,
			15,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			39,
			16,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			39,
			18,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			39,
			20,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			39,
			21,
		),
		tokens.NewToken(
			tokens.Slash,
			`/`,
			nil,
			39,
			23,
		),
		tokens.NewToken(
			tokens.Number,
			`2`,
			2.0,
			39,
			25,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			39,
			26,
		),
		tokens.NewToken(
			tokens.If,
			`if`,
			nil,
			41,
			1,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			41,
			4,
		),
		tokens.NewToken(
			tokens.True,
			`true`,
			nil,
			41,
			5,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			41,
			9,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			41,
			11,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			42,
			5,
		),
		tokens.NewToken(
			tokens.String,
			`"yes"`,
			"yes",
			42,
			11,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			42,
			16,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			43,
			3,
		),
		tokens.NewToken(
			tokens.Else,
			`else`,
			nil,
			43,
			5,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			43,
			10,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			44,
			5,
		),
		tokens.NewToken(
			tokens.String,
			`"no"`,
			"no",
			44,
			11,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			44,
			15,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			45,
			1,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			47,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			47,
			5,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			47,
			7,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			47,
			9,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			47,
			10,
		),
		tokens.NewToken(
			tokens.While,
			`while`,
			nil,
			48,
			1,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			48,
			7,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			48,
			8,
		),
		tokens.NewToken(
			tokens.Less,
			`<`,
			nil,
			48,
			10,
		),
		tokens.NewToken(
			tokens.Number,
			`10`,
			10.0,
			48,
			12,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			48,
			14,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			48,
			16,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			49,
			3,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			49,
			9,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			49,
			10,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			50,
			3,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			50,
			5,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			50,
			7,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			50,
			9,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			50,
			11,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			50,
			12,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			51,
			1,
		),
		tokens.NewToken(
			tokens.For,
			`for`,
			nil,
			53,
			1,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			53,
			5,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			53,
			6,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			53,
			10,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			53,
			12,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			53,
			14,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			53,
			15,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			53,
			17,
		),
		tokens.NewToken(
			tokens.Less,
			`<`,
			nil,
			53,
			19,
		),
		tokens.NewToken(
			tokens.Number,
			`10`,
			10.0,
			53,
			21,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			53,
			23,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			53,
			25,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			53,
			27,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			53,
			29,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			53,
			31,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			53,
			33,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			53,
			34,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			53,
			36,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			54,
			3,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			54,
			9,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			54,
			10,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			55,
			1,
		),
		tokens.NewToken(
			tokens.Fun,
			`fun`,
			nil,
			57,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`printSum`,
			nil,
			57,
			5,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			57,
			13,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			57,
			14,
		),
		tokens.NewToken(
			tokens.Comma,
			`,`,
			nil,
			57,
			15,
		),
		tokens.NewToken(
			tokens.Identifier,
			`b`,
			nil,
			57,
			17,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			57,
			18,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			57,
			20,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			58,
			3,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			58,
			9,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			58,
			11,
		),
		tokens.NewToken(
			tokens.Identifier,
			`b`,
			nil,
			58,
			13,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			58,
			14,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			59,
			1,
		),
		tokens.NewToken(
			tokens.Fun,
			`fun`,
			nil,
			61,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`returnSum`,
			nil,
			61,
			5,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			61,
			14,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			61,
			15,
		),
		tokens.NewToken(
			tokens.Comma,
			`,`,
			nil,
			61,
			16,
		),
		tokens.NewToken(
			tokens.Identifier,
			`b`,
			nil,
			61,
			18,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			61,
			19,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			61,
			21,
		),
		tokens.NewToken(
			tokens.Return,
			`return`,
			nil,
			62,
			3,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			62,
			10,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			62,
			12,
		),
		tokens.NewToken(
			tokens.Identifier,
			`b`,
			nil,
			62,
			14,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			62,
			15,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			63,
			1,
		),
		tokens.NewToken(
			tokens.Fun,
			`fun`,
			nil,
			65,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`addPair`,
			nil,
			65,
			5,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			65,
			12,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			65,
			13,
		),
		tokens.NewToken(
			tokens.Comma,
			`,`,
			nil,
			65,
			14,
		),
		tokens.NewToken(
			tokens.Identifier,
			`b`,
			nil,
			65,
			16,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			65,
			17,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			65,
			19,
		),
		tokens.NewToken(
			tokens.Return,
			`return`,
			nil,
			66,
			3,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			66,
			10,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			66,
			12,
		),
		tokens.NewToken(
			tokens.Identifier,
			`b`,
			nil,
			66,
			14,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			66,
			15,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			67,
			1,
		),
		tokens.NewToken(
			tokens.Fun,
			`fun`,
			nil,
			69,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`identity`,
			nil,
			69,
			5,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			69,
			13,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			69,
			14,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			69,
			15,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			69,
			17,
		),
		tokens.NewToken(
			tokens.Return,
			`return`,
			nil,
			70,
			3,
		),
		tokens.NewToken(
			tokens.Identifier,
			`a`,
			nil,
			70,
			10,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			70,
			11,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			71,
			1,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			73,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`identity`,
			nil,
			73,
			7,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			73,
			15,
		),
		tokens.NewToken(
			tokens.Identifier,
			`addPair`,
			nil,
			73,
			16,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			73,
			23,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			73,
			24,
		),
		tokens.NewToken(
			tokens.Number,
			`1`,
			1.0,
			73,
			25,
		),
		tokens.NewToken(
			tokens.Comma,
			`,`,
			nil,
			73,
			26,
		),
		tokens.NewToken(
			tokens.Number,
			`2`,
			2.0,
			73,
			28,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			73,
			29,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			73,
			30,
		),
		tokens.NewToken(
			tokens.Fun,
			`fun`,
			nil,
			75,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`outerFunction`,
			nil,
			75,
			5,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			75,
			18,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			75,
			19,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			75,
			21,
		),
		tokens.NewToken(
			tokens.Fun,
			`fun`,
			nil,
			76,
			3,
		),
		tokens.NewToken(
			tokens.Identifier,
			`localFunction`,
			nil,
			76,
			7,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			76,
			20,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			76,
			21,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			76,
			23,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			77,
			5,
		),
		tokens.NewToken(
			tokens.String,
			`"I'm local!"`,
			"I'm local!",
			77,
			11,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			77,
			23,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			78,
			3,
		),
		tokens.NewToken(
			tokens.Identifier,
			`localFunction`,
			nil,
			80,
			3,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			80,
			16,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			80,
			17,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			80,
			18,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			81,
			1,
		),
		tokens.NewToken(
			tokens.Class,
			`class`,
			nil,
			83,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`Breakfast`,
			nil,
			83,
			7,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			83,
			17,
		),
		tokens.NewToken(
			tokens.Identifier,
			`cook`,
			nil,
			84,
			3,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			84,
			7,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			84,
			8,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			84,
			10,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			85,
			5,
		),
		tokens.NewToken(
			tokens.String,
			`"Eggs a-fryin'!"`,
			"Eggs a-fryin'!",
			85,
			11,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			85,
			27,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			86,
			3,
		),
		tokens.NewToken(
			tokens.Identifier,
			`serve`,
			nil,
			88,
			3,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			88,
			8,
		),
		tokens.NewToken(
			tokens.Identifier,
			`who`,
			nil,
			88,
			9,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			88,
			12,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			88,
			14,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			89,
			5,
		),
		tokens.NewToken(
			tokens.String,
			`"Enjoy your breakfast, "`,
			"Enjoy your breakfast, ",
			89,
			11,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			89,
			36,
		),
		tokens.NewToken(
			tokens.Identifier,
			`who`,
			nil,
			89,
			38,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			89,
			42,
		),
		tokens.NewToken(
			tokens.String,
			`"."`,
			".",
			89,
			44,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			89,
			47,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			90,
			3,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			91,
			1,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			94,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`someVariable`,
			nil,
			94,
			5,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			94,
			18,
		),
		tokens.NewToken(
			tokens.Identifier,
			`Breakfast`,
			nil,
			94,
			20,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			94,
			29,
		),
		tokens.NewToken(
			tokens.Identifier,
			`someFunction`,
			nil,
			97,
			1,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			97,
			13,
		),
		tokens.NewToken(
			tokens.Identifier,
			`Breakfast`,
			nil,
			97,
			14,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			97,
			23,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			97,
			24,
		),
		tokens.NewToken(
			tokens.Var,
			`var`,
			nil,
			99,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`breakfast`,
			nil,
			99,
			5,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			99,
			15,
		),
		tokens.NewToken(
			tokens.Identifier,
			`Breakfast`,
			nil,
			99,
			17,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			99,
			26,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			99,
			27,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			99,
			28,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			100,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`breakfast`,
			nil,
			100,
			7,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			100,
			16,
		),
		tokens.NewToken(
			tokens.Class,
			`class`,
			nil,
			102,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`Breakfast`,
			nil,
			102,
			7,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			102,
			17,
		),
		tokens.NewToken(
			tokens.Identifier,
			`init`,
			nil,
			103,
			3,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			103,
			7,
		),
		tokens.NewToken(
			tokens.Identifier,
			`meat`,
			nil,
			103,
			8,
		),
		tokens.NewToken(
			tokens.Comma,
			`,`,
			nil,
			103,
			12,
		),
		tokens.NewToken(
			tokens.Identifier,
			`bread`,
			nil,
			103,
			14,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			103,
			19,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			103,
			21,
		),
		tokens.NewToken(
			tokens.This,
			`this`,
			nil,
			104,
			5,
		),
		tokens.NewToken(
			tokens.Dot,
			`.`,
			nil,
			104,
			9,
		),
		tokens.NewToken(
			tokens.Identifier,
			`meat`,
			nil,
			104,
			10,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			104,
			15,
		),
		tokens.NewToken(
			tokens.Identifier,
			`meat`,
			nil,
			104,
			17,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			104,
			21,
		),
		tokens.NewToken(
			tokens.This,
			`this`,
			nil,
			105,
			5,
		),
		tokens.NewToken(
			tokens.Dot,
			`.`,
			nil,
			105,
			9,
		),
		tokens.NewToken(
			tokens.Identifier,
			`bread`,
			nil,
			105,
			10,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			105,
			16,
		),
		tokens.NewToken(
			tokens.Identifier,
			`bread`,
			nil,
			105,
			18,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			105,
			23,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			106,
			3,
		),
		tokens.NewToken(
			tokens.Identifier,
			`serve`,
			nil,
			108,
			3,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			108,
			8,
		),
		tokens.NewToken(
			tokens.Identifier,
			`who`,
			nil,
			108,
			9,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			108,
			12,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			108,
			14,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			109,
			5,
		),
		tokens.NewToken(
			tokens.String,
			`"Enjoy your "`,
			"Enjoy your ",
			109,
			11,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			109,
			25,
		),
		tokens.NewToken(
			tokens.This,
			`this`,
			nil,
			109,
			27,
		),
		tokens.NewToken(
			tokens.Dot,
			`.`,
			nil,
			109,
			31,
		),
		tokens.NewToken(
			tokens.Identifier,
			`meat`,
			nil,
			109,
			32,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			109,
			37,
		),
		tokens.NewToken(
			tokens.String,
			`" and "`,
			" and ",
			109,
			39,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			109,
			47,
		),
		tokens.NewToken(
			tokens.This,
			`this`,
			nil,
			110,
			9,
		),
		tokens.NewToken(
			tokens.Dot,
			`.`,
			nil,
			110,
			13,
		),
		tokens.NewToken(
			tokens.Identifier,
			`bread`,
			nil,
			110,
			14,
		),

		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			110,
			20,
		),
		tokens.NewToken(
			tokens.String,
			`", "`,
			", ",
			110,
			22,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			110,
			27,
		),
		tokens.NewToken(
			tokens.Identifier,
			`who`,
			nil,
			110,
			29,
		),
		tokens.NewToken(
			tokens.Plus,
			`+`,
			nil,
			110,
			33,
		),
		tokens.NewToken(
			tokens.String,
			`"."`,
			".",
			110,
			35,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			110,
			38,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			111,
			3,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			114,
			1,
		),
		tokens.NewToken(
			tokens.Class,
			`class`,
			nil,
			116,
			1,
		),
		tokens.NewToken(
			tokens.Identifier,
			`Brunch`,
			nil,
			116,
			7,
		),
		tokens.NewToken(
			tokens.Less,
			`<`,
			nil,
			116,
			14,
		),
		tokens.NewToken(
			tokens.Identifier,
			`Breakfast`,
			nil,
			116,
			16,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			116,
			26,
		),
		tokens.NewToken(
			tokens.Identifier,
			`init`,
			nil,
			117,
			3,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			117,
			7,
		),
		tokens.NewToken(
			tokens.Identifier,
			`meat`,
			nil,
			117,
			8,
		),
		tokens.NewToken(
			tokens.Comma,
			`,`,
			nil,
			117,
			12,
		),
		tokens.NewToken(
			tokens.Identifier,
			`bread`,
			nil,
			117,
			14,
		),
		tokens.NewToken(
			tokens.Comma,
			`,`,
			nil,
			117,
			19,
		),
		tokens.NewToken(
			tokens.Identifier,
			`drink`,
			nil,
			117,
			21,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			117,
			26,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			117,
			28,
		),
		tokens.NewToken(
			tokens.Super,
			`super`,
			nil,
			118,
			5,
		),
		tokens.NewToken(
			tokens.Dot,
			`.`,
			nil,
			118,
			10,
		),
		tokens.NewToken(
			tokens.Identifier,
			`init`,
			nil,
			118,
			11,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			118,
			15,
		),
		tokens.NewToken(
			tokens.Identifier,
			`meat`,
			nil,
			118,
			16,
		),
		tokens.NewToken(
			tokens.Comma,
			`,`,
			nil,
			118,
			20,
		),
		tokens.NewToken(
			tokens.Identifier,
			`bread`,
			nil,
			118,
			22,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			118,
			27,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			118,
			28,
		),
		tokens.NewToken(
			tokens.This,
			`this`,
			nil,
			119,
			5,
		),
		tokens.NewToken(
			tokens.Dot,
			`.`,
			nil,
			119,
			9,
		),
		tokens.NewToken(
			tokens.Identifier,
			`drink`,
			nil,
			119,
			10,
		),
		tokens.NewToken(
			tokens.Equal,
			`=`,
			nil,
			119,
			16,
		),
		tokens.NewToken(
			tokens.Identifier,
			`drink`,
			nil,
			119,
			18,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			119,
			23,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			120,
			3,
		),
		tokens.NewToken(
			tokens.Identifier,
			`drink`,
			nil,
			122,
			3,
		),
		tokens.NewToken(
			tokens.LeftParen,
			`(`,
			nil,
			122,
			8,
		),
		tokens.NewToken(
			tokens.RightParen,
			`)`,
			nil,
			122,
			9,
		),
		tokens.NewToken(
			tokens.LeftBrace,
			`{`,
			nil,
			122,
			11,
		),
		tokens.NewToken(
			tokens.Print,
			`print`,
			nil,
			123,
			5,
		),
		tokens.NewToken(
			tokens.String,
			`"How about a Bloody Mary?"`,
			"How about a Bloody Mary?",
			123,
			11,
		),
		tokens.NewToken(
			tokens.Semicolon,
			`;`,
			nil,
			123,
			37,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			124,
			3,
		),
		tokens.NewToken(
			tokens.RightBrace,
			`}`,
			nil,
			125,
			1,
		),
		tokens.NewToken(
			tokens.EOF,
			``,
			nil,
			125,
			1,
		),
	}

	for i, tkn := range tkns {
		assert.Equal(t, expectedTokens[i], tkn)
	}
}
